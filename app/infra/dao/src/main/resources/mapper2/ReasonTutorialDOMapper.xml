<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.antgroup.openspgapp.infra.dao.mapper.ReasonTutorialDOMapper">
  <resultMap id="BaseResultMap" type="com.antgroup.openspgapp.infra.dao.dataobject.ReasonTutorialDO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="project_id" jdbcType="BIGINT" property="projectId" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
    <result column="enable" jdbcType="BIT" property="enable" />
    <result column="name" jdbcType="VARCHAR" property="name" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.antgroup.openspgapp.infra.dao.dataobject.ReasonTutorialDOWithBLOBs">
    <result column="dsl" jdbcType="LONGVARCHAR" property="dsl" />
    <result column="nl" jdbcType="LONGVARCHAR" property="nl" />
    <result column="params" jdbcType="LONGVARCHAR" property="params" />
    <result column="description" jdbcType="LONGVARCHAR" property="description" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.isValid()">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.isValid()">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, project_id, gmt_create, gmt_modified, enable, name
  </sql>
  <sql id="Blob_Column_List">
    dsl, nl, params, description
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.antgroup.openspgapp.infra.dao.dataobject.ReasonTutorialDOExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from kg_reason_tutorial
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${@com.antgroup.openspg.server.infra.dao.SecurityUtils@trimSql4OrderBy(orderByClause)}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.antgroup.openspgapp.infra.dao.dataobject.ReasonTutorialDOExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from kg_reason_tutorial
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${@com.antgroup.openspg.server.infra.dao.SecurityUtils@trimSql4OrderBy(orderByClause)}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from kg_reason_tutorial
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from kg_reason_tutorial
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.antgroup.openspgapp.infra.dao.dataobject.ReasonTutorialDOExample">
    delete from kg_reason_tutorial
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.antgroup.openspgapp.infra.dao.dataobject.ReasonTutorialDOWithBLOBs">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into kg_reason_tutorial (project_id, gmt_create, gmt_modified,
      enable, name, dsl,
      nl, params, description
      )
    values (#{projectId,jdbcType=BIGINT}, #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP},
      #{enable,jdbcType=BIT}, #{name,jdbcType=VARCHAR}, #{dsl,jdbcType=LONGVARCHAR},
      #{nl,jdbcType=LONGVARCHAR}, #{params,jdbcType=LONGVARCHAR}, #{description,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.antgroup.openspgapp.infra.dao.dataobject.ReasonTutorialDOWithBLOBs">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into kg_reason_tutorial
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="projectId != null">
        project_id,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
      <if test="enable != null">
        enable,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="dsl != null">
        dsl,
      </if>
      <if test="nl != null">
        nl,
      </if>
      <if test="params != null">
        params,
      </if>
      <if test="description != null">
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="projectId != null">
        #{projectId,jdbcType=BIGINT},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="enable != null">
        #{enable,jdbcType=BIT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="dsl != null">
        #{dsl,jdbcType=LONGVARCHAR},
      </if>
      <if test="nl != null">
        #{nl,jdbcType=LONGVARCHAR},
      </if>
      <if test="params != null">
        #{params,jdbcType=LONGVARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.antgroup.openspgapp.infra.dao.dataobject.ReasonTutorialDOExample" resultType="java.lang.Long">
    select count(*) from kg_reason_tutorial
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update kg_reason_tutorial
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.projectId != null">
        project_id = #{record.projectId,jdbcType=BIGINT},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtModified != null">
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="record.enable != null">
        enable = #{record.enable,jdbcType=BIT},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.dsl != null">
        dsl = #{record.dsl,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.nl != null">
        nl = #{record.nl,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.params != null">
        params = #{record.params,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update kg_reason_tutorial
    set id = #{record.id,jdbcType=BIGINT},
      project_id = #{record.projectId,jdbcType=BIGINT},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      enable = #{record.enable,jdbcType=BIT},
      name = #{record.name,jdbcType=VARCHAR},
      dsl = #{record.dsl,jdbcType=LONGVARCHAR},
      nl = #{record.nl,jdbcType=LONGVARCHAR},
      params = #{record.params,jdbcType=LONGVARCHAR},
      description = #{record.description,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update kg_reason_tutorial
    set id = #{record.id,jdbcType=BIGINT},
      project_id = #{record.projectId,jdbcType=BIGINT},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      enable = #{record.enable,jdbcType=BIT},
      name = #{record.name,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.antgroup.openspgapp.infra.dao.dataobject.ReasonTutorialDOWithBLOBs">
    update kg_reason_tutorial
    <set>
      <if test="projectId != null">
        project_id = #{projectId,jdbcType=BIGINT},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="enable != null">
        enable = #{enable,jdbcType=BIT},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="dsl != null">
        dsl = #{dsl,jdbcType=LONGVARCHAR},
      </if>
      <if test="nl != null">
        nl = #{nl,jdbcType=LONGVARCHAR},
      </if>
      <if test="params != null">
        params = #{params,jdbcType=LONGVARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.antgroup.openspgapp.infra.dao.dataobject.ReasonTutorialDOWithBLOBs">
    update kg_reason_tutorial
    set project_id = #{projectId,jdbcType=BIGINT},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      enable = #{enable,jdbcType=BIT},
      name = #{name,jdbcType=VARCHAR},
      dsl = #{dsl,jdbcType=LONGVARCHAR},
      nl = #{nl,jdbcType=LONGVARCHAR},
      params = #{params,jdbcType=LONGVARCHAR},
      description = #{description,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.antgroup.openspgapp.infra.dao.dataobject.ReasonTutorialDO">
    update kg_reason_tutorial
    set project_id = #{projectId,jdbcType=BIGINT},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      enable = #{enable,jdbcType=BIT},
      name = #{name,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>
